// List of IDOR keywords (lowercase)
String[] idorKeywords = new String[] {
    "user_id", "userid", "account_id", "accountid", "profile_id", "profileid",
    "customer_id", "custid", "uid", "id=", "user=", "account=", "member_id"
};

// Get the raw request as lowercase string
String requestStr = requestResponse.request().toString().toLowerCase();

// Split into lines for header parsing
String[] lines = requestStr.split("\r\n");

// Extract Referer header if present
String referer = null;
for (String line : lines) {
    if (line.startsWith("referer:")) {
        referer = line.substring("referer:".length()).trim();
        break;
    }
}

// Find keywords in the Referer header (if any)
List<String> refererKeywords = new ArrayList<>();
if (referer != null) {
    for (String kw : idorKeywords) {
        if (referer.contains(kw.toLowerCase())) {
            refererKeywords.add(kw);
        }
    }
}

// Find keywords in the whole request
List<String> requestKeywords = new ArrayList<>();
for (String kw : idorKeywords) {
    if (requestStr.contains(kw.toLowerCase())) {
        requestKeywords.add(kw);
    }
}

// Now check:
// Highlight only if requestKeywords contains keywords
// AND there is at least one keyword outside Referer (i.e., requestKeywords - refererKeywords not empty)

boolean hasKeywordsInRequest = !requestKeywords.isEmpty();
boolean keywordsOnlyInReferer = hasKeywordsInRequest && requestKeywords.size() == refererKeywords.size();

if (hasKeywordsInRequest && !keywordsOnlyInReferer) {
    requestResponse.annotations().setHighlightColor(HighlightColor.ORANGE);
    String notes = "Possible IDOR parameters: " + String.join(", ", requestKeywords);
    requestResponse.annotations().setNotes(notes);
} else {
    // No highlight if keywords only in Referer or no keywords found
    requestResponse.annotations().setHighlightColor(HighlightColor.NONE);
    requestResponse.annotations().setNotes("");
}

return true;
